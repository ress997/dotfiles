[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
if has('mac') && executable('osascript')
    let g:dein#enable_notification = 1
endif
'''

# Library {{{

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'vim-jp/vital.vim'

# }}}

[[plugins]] # ファイルタイプ自動切り替え
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

# deoplete {{{

[[plugins]] # 本体
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
depends = ['context_filetype.vim']
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_smart_case = 1

    " ---

    " <TAB>: completion.
    imap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#mappings#manual_complete()
    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('.')[col - 1]  =~ '\s'
    endfunction

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
'''

[[plugins]] # Golang
repo = 'zchee/deoplete-go'
depends = ['deoplete.nvim']
on_ft = ['go']
build = 'make'
hook_source = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
    let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
'''

[[plugins]] # Vim
repo = 'Shougo/neco-vim'
depends = ['deoplete.nvim']
on_ft = ['vim']

[[plugins]] # Zsh
repo = 'zchee/deoplete-zsh'
depends = ['deoplete.nvim']
on_ft = ['zsh']

# }}}

[[plugins]] # Auto Close (括弧)
repo = 'Townk/vim-autoclose'

[[plugins]] # Auto save
repo ='907th/vim-auto-save'
hook_add = '''
    let g:auto_save = 1 " Auto save 有効化
    let g:auto_save_in_insert_mode = 0 " インサートモードで自動保存 OFF
    let g:auto_save_silent = 1 " メッセージを表示しない
'''

[[plugins]] # Status line
repo = 'itchyny/lightline.vim'
on_event = ['VimEnter']
hook_source = '''
    let g:lightline = {'colorscheme': 'wombat'}
'''
hook_post_source = '''
    call lightline#colorscheme()
'''

[[plugins]] # EditorConfig
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'

[[plugins]] # 選択範囲を記号やタグで囲んだり外したりできる
repo = 'tpope/vim-surround'

[[plugins]] # Emmet
repo = 'mattn/emmet-vim'
on_i = 1
hook_source = '''
    let g:user_emmet_mode = 'i'
    let g:user_emmet_leader_key='<C-E>'
    let g:use_emmet_complete_tag = 1
    let g:user_emmet_settings = {
    \   'variables': {
    \       'lang': "ja"
    \   },
    \       'indentation': '    '
    \   }
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
    let g:openbrowser_menu_lang = 'ja'
'''

[[plugins]]
repo = 'tyru/open-browser-github.vim'
depends = ['open-browser.vim']
on_cmd = ['OpenGithubFile','OpenGithubIssue','OpenGithubPullReq']
hook_add = '''
    nnoremap go :<C-u>OpenGithubFile<CR>
    xnoremap go :OpenGithubFile<CR>
'''

[[plugins]] # Markdown Preview
repo = 'kannokanno/previm'
depends = ['open-browser.vim']
on_cmd = ['PrevimOpen']

[[plugins]] # 選択インターフェース
repo = 'junegunn/fzf'
if = 'executable("fzf")'
on_cmd = ['FZF','fzf#run']

# Command {{{

[[plugins]] # dein.vim command
repo = 'haya14busa/dein-command.vim'
depends = ['dein.vim']
on_cmd = ['Dein']

[[plugins]] # Git
repo = 'cohama/agit.vim'
on_cmd = ['Agit','AgitFile']

[[plugins]] # Gist
repo = 'lambdalisue/vim-gista'
on_cmd = ['Gista']

[[plugins]] # Codic
repo = 'yasuharu519/vim-codic'
if = 'exists("$CODIC_ACCESS_TOKEN")'
on_cmd = ['VimCodic']
hook_source = '''
    let g:vim_codic_access_token = $CODIC_ACCESS_TOKEN
'''

# }}}
# Colors {{{

[[plugins]] # hybrid
repo = 'w0ng/vim-hybrid'
hook_add = '''
    " let g:hybrid_custom_term_colors = 1
    " let g:hybrid_reduced_contrast = 1
'''

[[plugins]] # material
repo = 'jdkanani/vim-material-theme'

[[plugins]] # molokai
repo = 'tomasr/molokai'
hook_add = '''
    " let g:molokai_original = 1
    " let g:rehash256 = 1
'''

[[plugins]] # WWDC16
repo = 'lifepillar/vim-wwdc16-theme'


# }}}
# Lang {{{

[[plugins]] # Golang
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = '''
    let g:go_fmt_command = 'goimports'
'''
hook_post_update = '''
    if isdirectory(expand('$GOPATH'))
        execute 'GoInstallBinaries'
    else
        echo 'you must set $GOPATH of environment Variables.'
    endif
'''

[[plugins]] # Haml
repo  = 'tpope/vim-haml'

[[plugins]] # Html5
repo  = 'othree/html5.vim'

[[plugins]] # Markdown
repo = 'rcmdnk/vim-markdown'
hook_add = '''
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_math = 1
'''

[[plugins]] # TMUX
repo = 'tmux-plugins/vim-tmux'

[[plugins]] # Toml
repo  = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]] # TypeScript
repo = 'leafgarland/typescript-vim'

[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
on_ft = ['help']

# }}}
# Test {{{

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("nvim")'

# }}}
