[[plugins]]
repo = 'Shougo/dein.vim'

# Library {{{

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# }}}
# Automatic {{{

[[plugins]] # ファイルタイプ切り替え
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype'

[[plugins]] # Auto Close (括弧)
repo = 'jiangmiao/auto-pairs'
hook_add = '''
	" キーマップを無効にする
	let g:AutoPairsShortcutToggle = ''
	let g:AutoPairsShortcutFastWrap = ''
	let g:AutoPairsShortcutJump = ''
	let g:AutoPairsShortcutBackInsert = ''
'''

[[plugins]] # Auto save
repo ='907th/vim-auto-save'
on_path = '.*'
hook_source = '''
	let g:auto_save = 1                 " Auto save 有効化
	let g:auto_save_in_insert_mode = 0  " インサートモードで自動保存 OFF
	let g:auto_save_silent = 1          " メッセージを表示しない
'''
hook_post_source = 'call AutoSave()'

# }}}
# View {{{

[[plugins]] # 行番号表示
repo = 'jeffkreeftmeijer/vim-numbertoggle'
hook_add = 'let g:NumberToggleTrigger="<F2>"'

[[plugins]] # 対応括弧をハイライト
repo = 'itchyny/vim-parenmatch'
hook_add = 'let g:loaded_matchparen = 1'

[[plugins]] # git で管理してるファイルの変更を表示
repo = 'airblade/vim-gitgutter'
on_path = '.*'
hook_add = 'let g:gitgutter_map_keys = 0'

# Status line

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
	let g:lightline = {
	\	'colorscheme': 'hybrid',
	\	'inactive': {
	\		'left': [['filename']],
	\		'right':  [['lineinfo'], ['percent']]
	\	}
	\}
'''

[[plugins]]
repo = 'cocopon/lightline-hybrid.vim'
depends = 'lightline.vim'

# }}}
# Search {{{

[[plugins]]
repo = 'haya14busa/incsearch.vim'
on_map = '<Plug>(incsearch-'
hook_add = '''
	map /  <Plug>(incsearch-forward)
	map ?  <Plug>(incsearch-backward)
	map g/ <Plug>(incsearch-stay)
'''

[[plugins]] # 曖昧検索
repo = 'haya14busa/incsearch-fuzzy.vim'
depends = 'incsearch'
on_map = '<Plug>(incsearch-fuzzy-'
hook_add = '''
	map z/ <Plug>(incsearch-fuzzy-/)
	map z? <Plug>(incsearch-fuzzy-?)
	map zg/ <Plug>(incsearch-fuzzy-stay)
'''

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'
depends = ['incsearch', 'easymotion']
on_map = '<Plug>(incsearch-easymotion-'

# }}}
# 機能拡張 {{{

[[plugins]] # j/k による移動を早くする
repo = 'rhysd/accelerated-jk'
on_map = '<Plug>(accelerated'
hook_add = '''
	nmap j <Plug>(accelerated_jk_gj)
	nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]] # 移動拡張
repo = 'easymotion/vim-easymotion'
on_map = '<Plug>(easymotion-'

[[plugins]] # 選択範囲を記号やタグで囲んだり外したりできる
repo = 'tpope/vim-surround'
on_path = '.*'
hook_add = 'let g:surround_no_mappings = 1'

[[plugins]] # EditorConfig
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'
hook_source = '''
	if has('mac') && executable('/usr/local/bin/editorconfig')
		let g:EditorConfig_core_mode = 'external_command'
		let g:EditorConfig_exec_path = '/usr/local/bin/editorconfig'
	endif
'''

[[plugins]] # Emmet
repo = 'mattn/emmet-vim'
on_cmd = 'Emmet'
on_ft = ['html', 'haml', 'css', 'sass', 'scss']
hook_source = '''
	let g:user_emmet_settings = {
	\	'variables': {
	\		'lang': "ja"
	\	}
	\}
'''

[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

# Neo xxx

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = 'denite'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_source = 'denite'
on_event = 'TextYankPost'

[[plugins]] # Neo Snippet
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype']
on_event = 'InsertCharPre'
on_ft = 'snippet'
on_source = 'deoplete'
hook_source = '''
	imap <C-k> <Plug>(neosnippet_expand_or_jump)
	smap <C-k> <Plug>(neosnippet_expand_or_jump)
	xmap <C-k> <Plug>(neosnippet_expand_target)

	" TODO: 後で調べる
	let neosnippet#disable_select_mode_mappings = 0

	let g:neosnippet#snippets_directory = dein#get('neosnippet-snippets').path . '/neosnippets'
'''

# NERD Tree

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
	" 不可視ファイルを表示する
	let g:NERDTreeShowHidden = 1

	" 除外対象指定
	let g:NERDTreeIgnore = ['.git$', '.(tgz|gz|zip)$']
	if has('mac')
		call add(g:NERDTreeIgnore, '.DS_Store')
	endif

	" ブックマーク
	let g:NERDTreeShowBookmarks = 1
	let s:nerdtree_dir = g:cache_home . '/nerdtree'
	let g:NERDTreeBookmarksFile = s:nerdtree_dir . '/Bookmarks'
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
if = 'executable("git")'
deoplete = 'nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
deoplete = 'nerdtree'
hook_add = 'nmap tf <Plug>NERDTreeTabsToggle<CR>'

# Open Browser

[[plugins]]
repo = 'tyru/open-browser.vim'
on_cmd = ['OpenBrowser', 'OpenBrowserSearch', 'OpenBrowserSmartSearch']
on_map = '<Plug>(openbrowser-'
hook_add = '''
	" カーソル下のURLや単語をブラウザで開く
	nmap go <Plug>(openbrowser-smart-search)
	vmap go <Plug>(openbrowser-smart-search)
'''
hook_source = 'let g:openbrowser_menu_lang = "ja"'

[[plugins]]
repo = 'tyru/open-browser-github.vim'
if = 'executable("git")'
depends = 'open-browser'
on_cmd = ['OpenGithubFile', 'OpenGithubIssue', 'OpenGithubPullReq']
hook_add = 'nnoremap gx :<C-u>OpenGithubFile<CR>'

# }}}
# Command {{{

[[plugins]] # dein.vim command
repo = 'haya14busa/dein-command.vim'
depends = 'dein'
on_cmd = 'Dein'

[[plugins]] # Git
repo = 'cohama/agit.vim'
on_cmd = 'Agit'

[[plugins]] # Gist
repo = 'lambdalisue/vim-gista'
on_cmd = 'Gista'

[[plugins]] # Preview
repo = 'kannokanno/previm'
depends = 'open-browser'
on_ft = 'markdown'

[[plugins]] # Codic
repo = 'yasuharu519/vim-codic'
if = 'exists("$CODIC_ACCESS_TOKEN")'
on_cmd = 'VimCodic'
hook_source = 'let g:vim_codic_access_token = $CODIC_ACCESS_TOKEN'

# }}}
# Colors {{{

[[plugins]] # hybrid
repo = 'w0ng/vim-hybrid'

# }}}
