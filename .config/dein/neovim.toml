# Denite {{{

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
on_cmd = 'Denite'
hook_post_source = '''
	if executable('pt')
		call denite#custom#var('file_rec', 'command', ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
		call denite#custom#var('grep', 'command', ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
		call denite#custom#var('grep', 'default_opts', [])
		call denite#custom#var('grep', 'recursive_opts', [])
	endif
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = 'denite.nvim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = 'denite.nvim'

# }}}
# 補完 {{{

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_add = '''
	" 補完の表示オプション? TODO: 後で調べる
	set completeopt+=noinsert
	set completeopt+=noselect

	function! s:check_back_space() abort
		let col = col('.') - 1
		return !col || getline('.')[col - 1]  =~ '\s'
	endfunction

	" <TAB>: completion.
	imap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#mappings#manual_complete()

	" <S-TAB>: completion back.
	inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
'''
hook_source = '''
	let g:deoplete#enable_at_startup = 1
	let g:deoplete#enable_ignore_case = 1
	let g:deoplete#enable_smart_case = 1
'''
hook_post_source = 'call deoplete#enable()'

[[plugins]] # Docker
repo = 'zchee/deoplete-docker'
depends = 'deoplete.nvim'

[[plugins]] # Golang
repo = 'zchee/deoplete-go'
depends = 'deoplete.nvim'
on_ft = 'go'
build = 'make'
hook_source = '''
	let g:deoplete#sources#go#use_cache = 1
	let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
	let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
'''

[[plugins]] # Vim
repo = 'Shougo/neco-vim'
depends = 'deoplete.nvim'
on_ft = 'vim'

[[plugins]] # Zsh
repo = 'zchee/deoplete-zsh'
depends = 'deoplete.nvim'

# }}}
